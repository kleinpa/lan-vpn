load("@io_bazel_rules_docker//cc:image.bzl", "cc_image")
load("@rules_cc//cc:defs.bzl", "cc_library")

genrule(
    name = "config_h",
    outs = ["iperf_config.h"],
    cmd = "touch $@",
)

genrule(
    name = "version_h",
    outs = ["version.h"],
    cmd = "touch $@",
)

cc_binary(
    name = "iperf3",
    srcs = [
        "src/cjson.c",
        "src/cjson.h",
        "src/dscp.c",
        "src/flowlabel.h",
        "src/iperf.h",
        "src/iperf_api.c",
        "src/iperf_api.h",
        "src/iperf_auth.c",
        "src/iperf_auth.h",
        "src/iperf_client_api.c",
        "src/iperf_error.c",
        "src/iperf_locale.c",
        "src/iperf_locale.h",
        "src/iperf_sctp.c",
        "src/iperf_sctp.h",
        "src/iperf_server_api.c",
        "src/iperf_tcp.c",
        "src/iperf_tcp.h",
        "src/iperf_time.c",
        "src/iperf_time.h",
        "src/iperf_udp.c",
        "src/iperf_udp.h",
        "src/iperf_util.c",
        "src/iperf_util.h",
        "src/main.c",
        "src/net.c",
        "src/net.h",
        "src/portable_endian.h",
        "src/queue.h",
        "src/tcp_info.c",
        "src/timer.c",
        "src/timer.h",
        "src/units.c",
        "src/units.h",
        ":config_h",
        ":version_h",
    ],
    defines = [
        "HAVE_CLOCK_GETTIME",
        "HAVE_CPU_AFFINITY",
        "HAVE_DAEMON",
        "HAVE_DLFCN_H",
        "HAVE_ENDIAN_H",
        "HAVE_FLOWLABEL",
        "HAVE_GETLINE",
        "HAVE_INTTYPES_H",
        "HAVE_MEMORY_H",
        "HAVE_POLL_H",
        "HAVE_SCHED_SETAFFINITY",
        "HAVE_SENDFILE",
        "HAVE_SO_MAX_PACING_RATE",
        "HAVE_STDINT_H",
        "HAVE_STDLIB_H",
        "HAVE_STRINGS_H",
        "HAVE_STRING_H",
        "HAVE_SYS_ENDIAN_H",
        "HAVE_SYS_SOCKET_H",
        "HAVE_SYS_STAT_H",
        "HAVE_SYS_TYPES_H",
        "HAVE_TCP_CONGESTION",
        "HAVE_UNISTD_H",
        "LT_OBJDIR",
        "IPERF_VERSION=\\\"3\\\"",
        "PACKAGE_STRING=\\\"github.com/kleinpa/lan-vpn/tools/external/iperf3\\\"",
    ],
)

cc_image(
    name = "iperf3_image",
    binary = ":iperf3",
    args = ["-s"],
    visibility = ["//visibility:public"],
)
